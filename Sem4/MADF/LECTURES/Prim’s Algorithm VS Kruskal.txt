Prim’s Algorithm	                                                         Kruskal’s Algorithm
The tree that we are making or growing always remains connected.             The tree that we are making or growing usually remains  
                                                                             disconnected.


It traverses one node more than one time to get the minimum distance.        It traverses one node only once

Prim’s algorithm has a time complexity of O(V2), V being the number of       Kruskal’s algorithm’s time complexity is O(E log V)
vertices and can be improved up to O(E + log V) using Fibonacci heaps.        V being the number of vertices.

Prim’s algorithm gives connected component as well as                        Kruskal’s algorithm can generate forest(disconnected 
it works only on connected graph.                                            components) at any instant as well as it can work on 
                                                                             disconnected components

Prim’s algorithm runs faster in dense graphs.                                Kruskal’s algorithm runs faster in sparse graphs.


Prim’s Algorithm grows a solution from a random                              Kruskal’s Algorithm grows a solution from the
vertex by adding the next cheapest vertex to the                             cheapest edge by adding the next cheapest edge
existing tree.                                                               existing tree.

